// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: xline-command.proto

package xlineapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Command
type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys      []*KeyRange       `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Request   *RequestWithToken `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	CompactId uint64            `protobuf:"varint,3,opt,name=compact_id,json=compactId,proto3" json:"compact_id,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xline_command_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_xline_command_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_xline_command_proto_rawDescGZIP(), []int{0}
}

func (x *Command) GetKeys() []*KeyRange {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *Command) GetRequest() *RequestWithToken {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *Command) GetCompactId() uint64 {
	if x != nil {
		return x.CompactId
	}
	return 0
}

// Command::ER
type CommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ResponseWrapper:
	//
	//	*CommandResponse_RangeResponse
	//	*CommandResponse_PutResponse
	//	*CommandResponse_DeleteRangeResponse
	//	*CommandResponse_TxnResponse
	//	*CommandResponse_CompactionResponse
	//	*CommandResponse_AuthEnableResponse
	//	*CommandResponse_AuthDisableResponse
	//	*CommandResponse_AuthStatusResponse
	//	*CommandResponse_AuthRoleAddResponse
	//	*CommandResponse_AuthRoleDeleteResponse
	//	*CommandResponse_AuthRoleGetResponse
	//	*CommandResponse_AuthRoleGrantPermissionResponse
	//	*CommandResponse_AuthRoleListResponse
	//	*CommandResponse_AuthRoleRevokePermissionResponse
	//	*CommandResponse_AuthUserAddResponse
	//	*CommandResponse_AuthUserChangePasswordResponse
	//	*CommandResponse_AuthUserDeleteResponse
	//	*CommandResponse_AuthUserGetResponse
	//	*CommandResponse_AuthUserGrantRoleResponse
	//	*CommandResponse_AuthUserListResponse
	//	*CommandResponse_AuthUserRevokeRoleResponse
	//	*CommandResponse_AuthenticateResponse
	//	*CommandResponse_LeaseGrantResponse
	//	*CommandResponse_LeaseRevokeResponse
	//	*CommandResponse_LeaseLeasesResponse
	ResponseWrapper isCommandResponse_ResponseWrapper `protobuf_oneof:"response_wrapper"`
}

func (x *CommandResponse) Reset() {
	*x = CommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xline_command_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResponse) ProtoMessage() {}

func (x *CommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xline_command_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResponse.ProtoReflect.Descriptor instead.
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return file_xline_command_proto_rawDescGZIP(), []int{1}
}

func (m *CommandResponse) GetResponseWrapper() isCommandResponse_ResponseWrapper {
	if m != nil {
		return m.ResponseWrapper
	}
	return nil
}

func (x *CommandResponse) GetRangeResponse() *RangeResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_RangeResponse); ok {
		return x.RangeResponse
	}
	return nil
}

func (x *CommandResponse) GetPutResponse() *PutResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_PutResponse); ok {
		return x.PutResponse
	}
	return nil
}

func (x *CommandResponse) GetDeleteRangeResponse() *DeleteRangeResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_DeleteRangeResponse); ok {
		return x.DeleteRangeResponse
	}
	return nil
}

func (x *CommandResponse) GetTxnResponse() *TxnResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_TxnResponse); ok {
		return x.TxnResponse
	}
	return nil
}

func (x *CommandResponse) GetCompactionResponse() *CompactionResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_CompactionResponse); ok {
		return x.CompactionResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthEnableResponse() *AuthEnableResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthEnableResponse); ok {
		return x.AuthEnableResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthDisableResponse() *AuthDisableResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthDisableResponse); ok {
		return x.AuthDisableResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthStatusResponse() *AuthStatusResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthStatusResponse); ok {
		return x.AuthStatusResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthRoleAddResponse() *AuthRoleAddResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthRoleAddResponse); ok {
		return x.AuthRoleAddResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthRoleDeleteResponse() *AuthRoleDeleteResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthRoleDeleteResponse); ok {
		return x.AuthRoleDeleteResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthRoleGetResponse() *AuthRoleGetResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthRoleGetResponse); ok {
		return x.AuthRoleGetResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthRoleGrantPermissionResponse() *AuthRoleGrantPermissionResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthRoleGrantPermissionResponse); ok {
		return x.AuthRoleGrantPermissionResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthRoleListResponse() *AuthRoleListResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthRoleListResponse); ok {
		return x.AuthRoleListResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthRoleRevokePermissionResponse() *AuthRoleRevokePermissionResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthRoleRevokePermissionResponse); ok {
		return x.AuthRoleRevokePermissionResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthUserAddResponse() *AuthUserAddResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthUserAddResponse); ok {
		return x.AuthUserAddResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthUserChangePasswordResponse() *AuthUserChangePasswordResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthUserChangePasswordResponse); ok {
		return x.AuthUserChangePasswordResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthUserDeleteResponse() *AuthUserDeleteResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthUserDeleteResponse); ok {
		return x.AuthUserDeleteResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthUserGetResponse() *AuthUserGetResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthUserGetResponse); ok {
		return x.AuthUserGetResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthUserGrantRoleResponse() *AuthUserGrantRoleResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthUserGrantRoleResponse); ok {
		return x.AuthUserGrantRoleResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthUserListResponse() *AuthUserListResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthUserListResponse); ok {
		return x.AuthUserListResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthUserRevokeRoleResponse() *AuthUserRevokeRoleResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthUserRevokeRoleResponse); ok {
		return x.AuthUserRevokeRoleResponse
	}
	return nil
}

func (x *CommandResponse) GetAuthenticateResponse() *AuthenticateResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_AuthenticateResponse); ok {
		return x.AuthenticateResponse
	}
	return nil
}

func (x *CommandResponse) GetLeaseGrantResponse() *LeaseGrantResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_LeaseGrantResponse); ok {
		return x.LeaseGrantResponse
	}
	return nil
}

func (x *CommandResponse) GetLeaseRevokeResponse() *LeaseRevokeResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_LeaseRevokeResponse); ok {
		return x.LeaseRevokeResponse
	}
	return nil
}

func (x *CommandResponse) GetLeaseLeasesResponse() *LeaseLeasesResponse {
	if x, ok := x.GetResponseWrapper().(*CommandResponse_LeaseLeasesResponse); ok {
		return x.LeaseLeasesResponse
	}
	return nil
}

type isCommandResponse_ResponseWrapper interface {
	isCommandResponse_ResponseWrapper()
}

type CommandResponse_RangeResponse struct {
	RangeResponse *RangeResponse `protobuf:"bytes,1,opt,name=range_response,json=rangeResponse,proto3,oneof"`
}

type CommandResponse_PutResponse struct {
	PutResponse *PutResponse `protobuf:"bytes,2,opt,name=put_response,json=putResponse,proto3,oneof"`
}

type CommandResponse_DeleteRangeResponse struct {
	DeleteRangeResponse *DeleteRangeResponse `protobuf:"bytes,3,opt,name=delete_range_response,json=deleteRangeResponse,proto3,oneof"`
}

type CommandResponse_TxnResponse struct {
	TxnResponse *TxnResponse `protobuf:"bytes,4,opt,name=txn_response,json=txnResponse,proto3,oneof"`
}

type CommandResponse_CompactionResponse struct {
	CompactionResponse *CompactionResponse `protobuf:"bytes,5,opt,name=compaction_response,json=compactionResponse,proto3,oneof"`
}

type CommandResponse_AuthEnableResponse struct {
	AuthEnableResponse *AuthEnableResponse `protobuf:"bytes,6,opt,name=auth_enable_response,json=authEnableResponse,proto3,oneof"`
}

type CommandResponse_AuthDisableResponse struct {
	AuthDisableResponse *AuthDisableResponse `protobuf:"bytes,7,opt,name=auth_disable_response,json=authDisableResponse,proto3,oneof"`
}

type CommandResponse_AuthStatusResponse struct {
	AuthStatusResponse *AuthStatusResponse `protobuf:"bytes,8,opt,name=auth_status_response,json=authStatusResponse,proto3,oneof"`
}

type CommandResponse_AuthRoleAddResponse struct {
	AuthRoleAddResponse *AuthRoleAddResponse `protobuf:"bytes,9,opt,name=auth_role_add_response,json=authRoleAddResponse,proto3,oneof"`
}

type CommandResponse_AuthRoleDeleteResponse struct {
	AuthRoleDeleteResponse *AuthRoleDeleteResponse `protobuf:"bytes,10,opt,name=auth_role_delete_response,json=authRoleDeleteResponse,proto3,oneof"`
}

type CommandResponse_AuthRoleGetResponse struct {
	AuthRoleGetResponse *AuthRoleGetResponse `protobuf:"bytes,11,opt,name=auth_role_get_response,json=authRoleGetResponse,proto3,oneof"`
}

type CommandResponse_AuthRoleGrantPermissionResponse struct {
	AuthRoleGrantPermissionResponse *AuthRoleGrantPermissionResponse `protobuf:"bytes,12,opt,name=auth_role_grant_permission_response,json=authRoleGrantPermissionResponse,proto3,oneof"`
}

type CommandResponse_AuthRoleListResponse struct {
	AuthRoleListResponse *AuthRoleListResponse `protobuf:"bytes,13,opt,name=auth_role_list_response,json=authRoleListResponse,proto3,oneof"`
}

type CommandResponse_AuthRoleRevokePermissionResponse struct {
	AuthRoleRevokePermissionResponse *AuthRoleRevokePermissionResponse `protobuf:"bytes,14,opt,name=auth_role_revoke_permission_response,json=authRoleRevokePermissionResponse,proto3,oneof"`
}

type CommandResponse_AuthUserAddResponse struct {
	AuthUserAddResponse *AuthUserAddResponse `protobuf:"bytes,15,opt,name=auth_user_add_response,json=authUserAddResponse,proto3,oneof"`
}

type CommandResponse_AuthUserChangePasswordResponse struct {
	AuthUserChangePasswordResponse *AuthUserChangePasswordResponse `protobuf:"bytes,16,opt,name=auth_user_change_password_response,json=authUserChangePasswordResponse,proto3,oneof"`
}

type CommandResponse_AuthUserDeleteResponse struct {
	AuthUserDeleteResponse *AuthUserDeleteResponse `protobuf:"bytes,17,opt,name=auth_user_delete_response,json=authUserDeleteResponse,proto3,oneof"`
}

type CommandResponse_AuthUserGetResponse struct {
	AuthUserGetResponse *AuthUserGetResponse `protobuf:"bytes,18,opt,name=auth_user_get_response,json=authUserGetResponse,proto3,oneof"`
}

type CommandResponse_AuthUserGrantRoleResponse struct {
	AuthUserGrantRoleResponse *AuthUserGrantRoleResponse `protobuf:"bytes,19,opt,name=auth_user_grant_role_response,json=authUserGrantRoleResponse,proto3,oneof"`
}

type CommandResponse_AuthUserListResponse struct {
	AuthUserListResponse *AuthUserListResponse `protobuf:"bytes,20,opt,name=auth_user_list_response,json=authUserListResponse,proto3,oneof"`
}

type CommandResponse_AuthUserRevokeRoleResponse struct {
	AuthUserRevokeRoleResponse *AuthUserRevokeRoleResponse `protobuf:"bytes,21,opt,name=auth_user_revoke_role_response,json=authUserRevokeRoleResponse,proto3,oneof"`
}

type CommandResponse_AuthenticateResponse struct {
	AuthenticateResponse *AuthenticateResponse `protobuf:"bytes,22,opt,name=authenticate_response,json=authenticateResponse,proto3,oneof"`
}

type CommandResponse_LeaseGrantResponse struct {
	LeaseGrantResponse *LeaseGrantResponse `protobuf:"bytes,23,opt,name=lease_grant_response,json=leaseGrantResponse,proto3,oneof"`
}

type CommandResponse_LeaseRevokeResponse struct {
	LeaseRevokeResponse *LeaseRevokeResponse `protobuf:"bytes,24,opt,name=lease_revoke_response,json=leaseRevokeResponse,proto3,oneof"`
}

type CommandResponse_LeaseLeasesResponse struct {
	LeaseLeasesResponse *LeaseLeasesResponse `protobuf:"bytes,25,opt,name=lease_leases_response,json=leaseLeasesResponse,proto3,oneof"`
}

func (*CommandResponse_RangeResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_PutResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_DeleteRangeResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_TxnResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_CompactionResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthEnableResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthDisableResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthStatusResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthRoleAddResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthRoleDeleteResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthRoleGetResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthRoleGrantPermissionResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthRoleListResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthRoleRevokePermissionResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthUserAddResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthUserChangePasswordResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthUserDeleteResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthUserGetResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthUserGrantRoleResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthUserListResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthUserRevokeRoleResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_AuthenticateResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_LeaseGrantResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_LeaseRevokeResponse) isCommandResponse_ResponseWrapper() {}

func (*CommandResponse_LeaseLeasesResponse) isCommandResponse_ResponseWrapper() {}

// Command::ASR
type SyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Revision int64 `protobuf:"varint,1,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *SyncResponse) Reset() {
	*x = SyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xline_command_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResponse) ProtoMessage() {}

func (x *SyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xline_command_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResponse.ProtoReflect.Descriptor instead.
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return file_xline_command_proto_rawDescGZIP(), []int{2}
}

func (x *SyncResponse) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

type KeyRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	RangeEnd []byte `protobuf:"bytes,2,opt,name=range_end,json=rangeEnd,proto3" json:"range_end,omitempty"`
}

func (x *KeyRange) Reset() {
	*x = KeyRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xline_command_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRange) ProtoMessage() {}

func (x *KeyRange) ProtoReflect() protoreflect.Message {
	mi := &file_xline_command_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRange.ProtoReflect.Descriptor instead.
func (*KeyRange) Descriptor() ([]byte, []int) {
	return file_xline_command_proto_rawDescGZIP(), []int{3}
}

func (x *KeyRange) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyRange) GetRangeEnd() []byte {
	if x != nil {
		return x.RangeEnd
	}
	return nil
}

type RequestWithToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *string `protobuf:"bytes,1,opt,name=token,proto3,oneof" json:"token,omitempty"`
	// Types that are assignable to RequestWrapper:
	//
	//	*RequestWithToken_RangeRequest
	//	*RequestWithToken_PutRequest
	//	*RequestWithToken_DeleteRangeRequest
	//	*RequestWithToken_TxnRequest
	//	*RequestWithToken_CompactionRequest
	//	*RequestWithToken_AuthEnableRequest
	//	*RequestWithToken_AuthDisableRequest
	//	*RequestWithToken_AuthStatusRequest
	//	*RequestWithToken_AuthRoleAddRequest
	//	*RequestWithToken_AuthRoleDeleteRequest
	//	*RequestWithToken_AuthRoleGetRequest
	//	*RequestWithToken_AuthRoleGrantPermissionRequest
	//	*RequestWithToken_AuthRoleListRequest
	//	*RequestWithToken_AuthRoleRevokePermissionRequest
	//	*RequestWithToken_AuthUserAddRequest
	//	*RequestWithToken_AuthUserChangePasswordRequest
	//	*RequestWithToken_AuthUserDeleteRequest
	//	*RequestWithToken_AuthUserGetRequest
	//	*RequestWithToken_AuthUserGrantRoleRequest
	//	*RequestWithToken_AuthUserListRequest
	//	*RequestWithToken_AuthUserRevokeRoleRequest
	//	*RequestWithToken_AuthenticateRequest
	//	*RequestWithToken_LeaseGrantRequest
	//	*RequestWithToken_LeaseRevokeRequest
	//	*RequestWithToken_LeaseLeasesRequest
	RequestWrapper isRequestWithToken_RequestWrapper `protobuf_oneof:"request_wrapper"`
}

func (x *RequestWithToken) Reset() {
	*x = RequestWithToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xline_command_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestWithToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestWithToken) ProtoMessage() {}

func (x *RequestWithToken) ProtoReflect() protoreflect.Message {
	mi := &file_xline_command_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestWithToken.ProtoReflect.Descriptor instead.
func (*RequestWithToken) Descriptor() ([]byte, []int) {
	return file_xline_command_proto_rawDescGZIP(), []int{4}
}

func (x *RequestWithToken) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (m *RequestWithToken) GetRequestWrapper() isRequestWithToken_RequestWrapper {
	if m != nil {
		return m.RequestWrapper
	}
	return nil
}

func (x *RequestWithToken) GetRangeRequest() *RangeRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_RangeRequest); ok {
		return x.RangeRequest
	}
	return nil
}

func (x *RequestWithToken) GetPutRequest() *PutRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_PutRequest); ok {
		return x.PutRequest
	}
	return nil
}

func (x *RequestWithToken) GetDeleteRangeRequest() *DeleteRangeRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_DeleteRangeRequest); ok {
		return x.DeleteRangeRequest
	}
	return nil
}

func (x *RequestWithToken) GetTxnRequest() *TxnRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_TxnRequest); ok {
		return x.TxnRequest
	}
	return nil
}

func (x *RequestWithToken) GetCompactionRequest() *CompactionRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_CompactionRequest); ok {
		return x.CompactionRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthEnableRequest() *AuthEnableRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthEnableRequest); ok {
		return x.AuthEnableRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthDisableRequest() *AuthDisableRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthDisableRequest); ok {
		return x.AuthDisableRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthStatusRequest() *AuthStatusRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthStatusRequest); ok {
		return x.AuthStatusRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthRoleAddRequest() *AuthRoleAddRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthRoleAddRequest); ok {
		return x.AuthRoleAddRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthRoleDeleteRequest() *AuthRoleDeleteRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthRoleDeleteRequest); ok {
		return x.AuthRoleDeleteRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthRoleGetRequest() *AuthRoleGetRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthRoleGetRequest); ok {
		return x.AuthRoleGetRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthRoleGrantPermissionRequest() *AuthRoleGrantPermissionRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthRoleGrantPermissionRequest); ok {
		return x.AuthRoleGrantPermissionRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthRoleListRequest() *AuthRoleListRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthRoleListRequest); ok {
		return x.AuthRoleListRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthRoleRevokePermissionRequest() *AuthRoleRevokePermissionRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthRoleRevokePermissionRequest); ok {
		return x.AuthRoleRevokePermissionRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthUserAddRequest() *AuthUserAddRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthUserAddRequest); ok {
		return x.AuthUserAddRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthUserChangePasswordRequest() *AuthUserChangePasswordRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthUserChangePasswordRequest); ok {
		return x.AuthUserChangePasswordRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthUserDeleteRequest() *AuthUserDeleteRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthUserDeleteRequest); ok {
		return x.AuthUserDeleteRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthUserGetRequest() *AuthUserGetRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthUserGetRequest); ok {
		return x.AuthUserGetRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthUserGrantRoleRequest() *AuthUserGrantRoleRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthUserGrantRoleRequest); ok {
		return x.AuthUserGrantRoleRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthUserListRequest() *AuthUserListRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthUserListRequest); ok {
		return x.AuthUserListRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthUserRevokeRoleRequest() *AuthUserRevokeRoleRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthUserRevokeRoleRequest); ok {
		return x.AuthUserRevokeRoleRequest
	}
	return nil
}

func (x *RequestWithToken) GetAuthenticateRequest() *AuthenticateRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_AuthenticateRequest); ok {
		return x.AuthenticateRequest
	}
	return nil
}

func (x *RequestWithToken) GetLeaseGrantRequest() *LeaseGrantRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_LeaseGrantRequest); ok {
		return x.LeaseGrantRequest
	}
	return nil
}

func (x *RequestWithToken) GetLeaseRevokeRequest() *LeaseRevokeRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_LeaseRevokeRequest); ok {
		return x.LeaseRevokeRequest
	}
	return nil
}

func (x *RequestWithToken) GetLeaseLeasesRequest() *LeaseLeasesRequest {
	if x, ok := x.GetRequestWrapper().(*RequestWithToken_LeaseLeasesRequest); ok {
		return x.LeaseLeasesRequest
	}
	return nil
}

type isRequestWithToken_RequestWrapper interface {
	isRequestWithToken_RequestWrapper()
}

type RequestWithToken_RangeRequest struct {
	RangeRequest *RangeRequest `protobuf:"bytes,2,opt,name=range_request,json=rangeRequest,proto3,oneof"`
}

type RequestWithToken_PutRequest struct {
	PutRequest *PutRequest `protobuf:"bytes,3,opt,name=put_request,json=putRequest,proto3,oneof"`
}

type RequestWithToken_DeleteRangeRequest struct {
	DeleteRangeRequest *DeleteRangeRequest `protobuf:"bytes,4,opt,name=delete_range_request,json=deleteRangeRequest,proto3,oneof"`
}

type RequestWithToken_TxnRequest struct {
	TxnRequest *TxnRequest `protobuf:"bytes,5,opt,name=txn_request,json=txnRequest,proto3,oneof"`
}

type RequestWithToken_CompactionRequest struct {
	CompactionRequest *CompactionRequest `protobuf:"bytes,6,opt,name=compaction_request,json=compactionRequest,proto3,oneof"`
}

type RequestWithToken_AuthEnableRequest struct {
	AuthEnableRequest *AuthEnableRequest `protobuf:"bytes,7,opt,name=auth_enable_request,json=authEnableRequest,proto3,oneof"`
}

type RequestWithToken_AuthDisableRequest struct {
	AuthDisableRequest *AuthDisableRequest `protobuf:"bytes,8,opt,name=auth_disable_request,json=authDisableRequest,proto3,oneof"`
}

type RequestWithToken_AuthStatusRequest struct {
	AuthStatusRequest *AuthStatusRequest `protobuf:"bytes,9,opt,name=auth_status_request,json=authStatusRequest,proto3,oneof"`
}

type RequestWithToken_AuthRoleAddRequest struct {
	AuthRoleAddRequest *AuthRoleAddRequest `protobuf:"bytes,10,opt,name=auth_role_add_request,json=authRoleAddRequest,proto3,oneof"`
}

type RequestWithToken_AuthRoleDeleteRequest struct {
	AuthRoleDeleteRequest *AuthRoleDeleteRequest `protobuf:"bytes,11,opt,name=auth_role_delete_request,json=authRoleDeleteRequest,proto3,oneof"`
}

type RequestWithToken_AuthRoleGetRequest struct {
	AuthRoleGetRequest *AuthRoleGetRequest `protobuf:"bytes,12,opt,name=auth_role_get_request,json=authRoleGetRequest,proto3,oneof"`
}

type RequestWithToken_AuthRoleGrantPermissionRequest struct {
	AuthRoleGrantPermissionRequest *AuthRoleGrantPermissionRequest `protobuf:"bytes,13,opt,name=auth_role_grant_permission_request,json=authRoleGrantPermissionRequest,proto3,oneof"`
}

type RequestWithToken_AuthRoleListRequest struct {
	AuthRoleListRequest *AuthRoleListRequest `protobuf:"bytes,14,opt,name=auth_role_list_request,json=authRoleListRequest,proto3,oneof"`
}

type RequestWithToken_AuthRoleRevokePermissionRequest struct {
	AuthRoleRevokePermissionRequest *AuthRoleRevokePermissionRequest `protobuf:"bytes,15,opt,name=auth_role_revoke_permission_request,json=authRoleRevokePermissionRequest,proto3,oneof"`
}

type RequestWithToken_AuthUserAddRequest struct {
	AuthUserAddRequest *AuthUserAddRequest `protobuf:"bytes,16,opt,name=auth_user_add_request,json=authUserAddRequest,proto3,oneof"`
}

type RequestWithToken_AuthUserChangePasswordRequest struct {
	AuthUserChangePasswordRequest *AuthUserChangePasswordRequest `protobuf:"bytes,17,opt,name=auth_user_change_password_request,json=authUserChangePasswordRequest,proto3,oneof"`
}

type RequestWithToken_AuthUserDeleteRequest struct {
	AuthUserDeleteRequest *AuthUserDeleteRequest `protobuf:"bytes,18,opt,name=auth_user_delete_request,json=authUserDeleteRequest,proto3,oneof"`
}

type RequestWithToken_AuthUserGetRequest struct {
	AuthUserGetRequest *AuthUserGetRequest `protobuf:"bytes,19,opt,name=auth_user_get_request,json=authUserGetRequest,proto3,oneof"`
}

type RequestWithToken_AuthUserGrantRoleRequest struct {
	AuthUserGrantRoleRequest *AuthUserGrantRoleRequest `protobuf:"bytes,20,opt,name=auth_user_grant_role_request,json=authUserGrantRoleRequest,proto3,oneof"`
}

type RequestWithToken_AuthUserListRequest struct {
	AuthUserListRequest *AuthUserListRequest `protobuf:"bytes,21,opt,name=auth_user_list_request,json=authUserListRequest,proto3,oneof"`
}

type RequestWithToken_AuthUserRevokeRoleRequest struct {
	AuthUserRevokeRoleRequest *AuthUserRevokeRoleRequest `protobuf:"bytes,22,opt,name=auth_user_revoke_role_request,json=authUserRevokeRoleRequest,proto3,oneof"`
}

type RequestWithToken_AuthenticateRequest struct {
	AuthenticateRequest *AuthenticateRequest `protobuf:"bytes,23,opt,name=authenticate_request,json=authenticateRequest,proto3,oneof"`
}

type RequestWithToken_LeaseGrantRequest struct {
	LeaseGrantRequest *LeaseGrantRequest `protobuf:"bytes,24,opt,name=lease_grant_request,json=leaseGrantRequest,proto3,oneof"`
}

type RequestWithToken_LeaseRevokeRequest struct {
	LeaseRevokeRequest *LeaseRevokeRequest `protobuf:"bytes,25,opt,name=lease_revoke_request,json=leaseRevokeRequest,proto3,oneof"`
}

type RequestWithToken_LeaseLeasesRequest struct {
	LeaseLeasesRequest *LeaseLeasesRequest `protobuf:"bytes,26,opt,name=lease_leases_request,json=leaseLeasesRequest,proto3,oneof"`
}

func (*RequestWithToken_RangeRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_PutRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_DeleteRangeRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_TxnRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_CompactionRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthEnableRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthDisableRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthStatusRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthRoleAddRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthRoleDeleteRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthRoleGetRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthRoleGrantPermissionRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthRoleListRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthRoleRevokePermissionRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthUserAddRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthUserChangePasswordRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthUserDeleteRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthUserGetRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthUserGrantRoleRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthUserListRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthUserRevokeRoleRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_AuthenticateRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_LeaseGrantRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_LeaseRevokeRequest) isRequestWithToken_RequestWrapper() {}

func (*RequestWithToken_LeaseLeasesRequest) isRequestWithToken_RequestWrapper() {}

var File_xline_command_proto protoreflect.FileDescriptor

var file_xline_command_proto_rawDesc = []byte{
	0x0a, 0x13, 0x78, 0x6c, 0x69, 0x6e, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x70, 0x62,
	0x1a, 0x09, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x07,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x70,
	0x62, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0xc4, 0x12, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0c, 0x70, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x74, 0x78, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x54,
	0x78, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x78,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x13, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x14, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65,
	0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x61, 0x75, 0x74, 0x68, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x14, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x74,
	0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x12, 0x61, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a,
	0x19, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x67, 0x65,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x23, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x17, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x74, 0x63,
	0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x24, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x20, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x16, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x74, 0x63, 0x64,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13,
	0x61, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x22, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x1e, 0x61, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x61, 0x0a, 0x19, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x61, 0x75, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x58, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x61, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x1d,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19,
	0x61, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x17, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x74, 0x63,
	0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x1e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x61, 0x75, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x12, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x15, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x15, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x65, 0x61, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x22, 0x2a, 0x0a,
	0x0c, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x08, 0x4b, 0x65, 0x79,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x45, 0x6e, 0x64, 0x22, 0x9d, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x74,
	0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x75, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x74, 0x78,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x54,
	0x78, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x78, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x13, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x14,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x74, 0x63,
	0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12,
	0x61, 0x75, 0x74, 0x68, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x51, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x18,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x15,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x74,
	0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x12, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x7a, 0x0a, 0x22, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x1e, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x58, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x7d, 0x0a, 0x23, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x61, 0x75, 0x74,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x77, 0x0a, 0x21, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x74, 0x63,
	0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1d, 0x61, 0x75, 0x74, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x18, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x74, 0x63,
	0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x15, 0x61, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x61, 0x75, 0x74,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x68, 0x0a, 0x1c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x18, 0x61, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x16, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x74, 0x63, 0x64,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13,
	0x61, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x1d, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x74, 0x63,
	0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x19, 0x61, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x56, 0x0a, 0x14, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x13, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x14, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x74, 0x63, 0x64,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x54, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x65, 0x74, 0x63, 0x64, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x12, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x30, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x78, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x42, 0x0c, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0a, 0x2e, 0x3b, 0x78, 0x6c,
	0x69, 0x6e, 0x65, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_xline_command_proto_rawDescOnce sync.Once
	file_xline_command_proto_rawDescData = file_xline_command_proto_rawDesc
)

func file_xline_command_proto_rawDescGZIP() []byte {
	file_xline_command_proto_rawDescOnce.Do(func() {
		file_xline_command_proto_rawDescData = protoimpl.X.CompressGZIP(file_xline_command_proto_rawDescData)
	})
	return file_xline_command_proto_rawDescData
}

var file_xline_command_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_xline_command_proto_goTypes = []interface{}{
	(*Command)(nil),                          // 0: commandpb.Command
	(*CommandResponse)(nil),                  // 1: commandpb.CommandResponse
	(*SyncResponse)(nil),                     // 2: commandpb.SyncResponse
	(*KeyRange)(nil),                         // 3: commandpb.KeyRange
	(*RequestWithToken)(nil),                 // 4: commandpb.RequestWithToken
	(*RangeResponse)(nil),                    // 5: etcdserverpb.RangeResponse
	(*PutResponse)(nil),                      // 6: etcdserverpb.PutResponse
	(*DeleteRangeResponse)(nil),              // 7: etcdserverpb.DeleteRangeResponse
	(*TxnResponse)(nil),                      // 8: etcdserverpb.TxnResponse
	(*CompactionResponse)(nil),               // 9: etcdserverpb.CompactionResponse
	(*AuthEnableResponse)(nil),               // 10: etcdserverpb.AuthEnableResponse
	(*AuthDisableResponse)(nil),              // 11: etcdserverpb.AuthDisableResponse
	(*AuthStatusResponse)(nil),               // 12: etcdserverpb.AuthStatusResponse
	(*AuthRoleAddResponse)(nil),              // 13: etcdserverpb.AuthRoleAddResponse
	(*AuthRoleDeleteResponse)(nil),           // 14: etcdserverpb.AuthRoleDeleteResponse
	(*AuthRoleGetResponse)(nil),              // 15: etcdserverpb.AuthRoleGetResponse
	(*AuthRoleGrantPermissionResponse)(nil),  // 16: etcdserverpb.AuthRoleGrantPermissionResponse
	(*AuthRoleListResponse)(nil),             // 17: etcdserverpb.AuthRoleListResponse
	(*AuthRoleRevokePermissionResponse)(nil), // 18: etcdserverpb.AuthRoleRevokePermissionResponse
	(*AuthUserAddResponse)(nil),              // 19: etcdserverpb.AuthUserAddResponse
	(*AuthUserChangePasswordResponse)(nil),   // 20: etcdserverpb.AuthUserChangePasswordResponse
	(*AuthUserDeleteResponse)(nil),           // 21: etcdserverpb.AuthUserDeleteResponse
	(*AuthUserGetResponse)(nil),              // 22: etcdserverpb.AuthUserGetResponse
	(*AuthUserGrantRoleResponse)(nil),        // 23: etcdserverpb.AuthUserGrantRoleResponse
	(*AuthUserListResponse)(nil),             // 24: etcdserverpb.AuthUserListResponse
	(*AuthUserRevokeRoleResponse)(nil),       // 25: etcdserverpb.AuthUserRevokeRoleResponse
	(*AuthenticateResponse)(nil),             // 26: etcdserverpb.AuthenticateResponse
	(*LeaseGrantResponse)(nil),               // 27: etcdserverpb.LeaseGrantResponse
	(*LeaseRevokeResponse)(nil),              // 28: etcdserverpb.LeaseRevokeResponse
	(*LeaseLeasesResponse)(nil),              // 29: etcdserverpb.LeaseLeasesResponse
	(*RangeRequest)(nil),                     // 30: etcdserverpb.RangeRequest
	(*PutRequest)(nil),                       // 31: etcdserverpb.PutRequest
	(*DeleteRangeRequest)(nil),               // 32: etcdserverpb.DeleteRangeRequest
	(*TxnRequest)(nil),                       // 33: etcdserverpb.TxnRequest
	(*CompactionRequest)(nil),                // 34: etcdserverpb.CompactionRequest
	(*AuthEnableRequest)(nil),                // 35: etcdserverpb.AuthEnableRequest
	(*AuthDisableRequest)(nil),               // 36: etcdserverpb.AuthDisableRequest
	(*AuthStatusRequest)(nil),                // 37: etcdserverpb.AuthStatusRequest
	(*AuthRoleAddRequest)(nil),               // 38: etcdserverpb.AuthRoleAddRequest
	(*AuthRoleDeleteRequest)(nil),            // 39: etcdserverpb.AuthRoleDeleteRequest
	(*AuthRoleGetRequest)(nil),               // 40: etcdserverpb.AuthRoleGetRequest
	(*AuthRoleGrantPermissionRequest)(nil),   // 41: etcdserverpb.AuthRoleGrantPermissionRequest
	(*AuthRoleListRequest)(nil),              // 42: etcdserverpb.AuthRoleListRequest
	(*AuthRoleRevokePermissionRequest)(nil),  // 43: etcdserverpb.AuthRoleRevokePermissionRequest
	(*AuthUserAddRequest)(nil),               // 44: etcdserverpb.AuthUserAddRequest
	(*AuthUserChangePasswordRequest)(nil),    // 45: etcdserverpb.AuthUserChangePasswordRequest
	(*AuthUserDeleteRequest)(nil),            // 46: etcdserverpb.AuthUserDeleteRequest
	(*AuthUserGetRequest)(nil),               // 47: etcdserverpb.AuthUserGetRequest
	(*AuthUserGrantRoleRequest)(nil),         // 48: etcdserverpb.AuthUserGrantRoleRequest
	(*AuthUserListRequest)(nil),              // 49: etcdserverpb.AuthUserListRequest
	(*AuthUserRevokeRoleRequest)(nil),        // 50: etcdserverpb.AuthUserRevokeRoleRequest
	(*AuthenticateRequest)(nil),              // 51: etcdserverpb.AuthenticateRequest
	(*LeaseGrantRequest)(nil),                // 52: etcdserverpb.LeaseGrantRequest
	(*LeaseRevokeRequest)(nil),               // 53: etcdserverpb.LeaseRevokeRequest
	(*LeaseLeasesRequest)(nil),               // 54: etcdserverpb.LeaseLeasesRequest
}
var file_xline_command_proto_depIdxs = []int32{
	3,  // 0: commandpb.Command.keys:type_name -> commandpb.KeyRange
	4,  // 1: commandpb.Command.request:type_name -> commandpb.RequestWithToken
	5,  // 2: commandpb.CommandResponse.range_response:type_name -> etcdserverpb.RangeResponse
	6,  // 3: commandpb.CommandResponse.put_response:type_name -> etcdserverpb.PutResponse
	7,  // 4: commandpb.CommandResponse.delete_range_response:type_name -> etcdserverpb.DeleteRangeResponse
	8,  // 5: commandpb.CommandResponse.txn_response:type_name -> etcdserverpb.TxnResponse
	9,  // 6: commandpb.CommandResponse.compaction_response:type_name -> etcdserverpb.CompactionResponse
	10, // 7: commandpb.CommandResponse.auth_enable_response:type_name -> etcdserverpb.AuthEnableResponse
	11, // 8: commandpb.CommandResponse.auth_disable_response:type_name -> etcdserverpb.AuthDisableResponse
	12, // 9: commandpb.CommandResponse.auth_status_response:type_name -> etcdserverpb.AuthStatusResponse
	13, // 10: commandpb.CommandResponse.auth_role_add_response:type_name -> etcdserverpb.AuthRoleAddResponse
	14, // 11: commandpb.CommandResponse.auth_role_delete_response:type_name -> etcdserverpb.AuthRoleDeleteResponse
	15, // 12: commandpb.CommandResponse.auth_role_get_response:type_name -> etcdserverpb.AuthRoleGetResponse
	16, // 13: commandpb.CommandResponse.auth_role_grant_permission_response:type_name -> etcdserverpb.AuthRoleGrantPermissionResponse
	17, // 14: commandpb.CommandResponse.auth_role_list_response:type_name -> etcdserverpb.AuthRoleListResponse
	18, // 15: commandpb.CommandResponse.auth_role_revoke_permission_response:type_name -> etcdserverpb.AuthRoleRevokePermissionResponse
	19, // 16: commandpb.CommandResponse.auth_user_add_response:type_name -> etcdserverpb.AuthUserAddResponse
	20, // 17: commandpb.CommandResponse.auth_user_change_password_response:type_name -> etcdserverpb.AuthUserChangePasswordResponse
	21, // 18: commandpb.CommandResponse.auth_user_delete_response:type_name -> etcdserverpb.AuthUserDeleteResponse
	22, // 19: commandpb.CommandResponse.auth_user_get_response:type_name -> etcdserverpb.AuthUserGetResponse
	23, // 20: commandpb.CommandResponse.auth_user_grant_role_response:type_name -> etcdserverpb.AuthUserGrantRoleResponse
	24, // 21: commandpb.CommandResponse.auth_user_list_response:type_name -> etcdserverpb.AuthUserListResponse
	25, // 22: commandpb.CommandResponse.auth_user_revoke_role_response:type_name -> etcdserverpb.AuthUserRevokeRoleResponse
	26, // 23: commandpb.CommandResponse.authenticate_response:type_name -> etcdserverpb.AuthenticateResponse
	27, // 24: commandpb.CommandResponse.lease_grant_response:type_name -> etcdserverpb.LeaseGrantResponse
	28, // 25: commandpb.CommandResponse.lease_revoke_response:type_name -> etcdserverpb.LeaseRevokeResponse
	29, // 26: commandpb.CommandResponse.lease_leases_response:type_name -> etcdserverpb.LeaseLeasesResponse
	30, // 27: commandpb.RequestWithToken.range_request:type_name -> etcdserverpb.RangeRequest
	31, // 28: commandpb.RequestWithToken.put_request:type_name -> etcdserverpb.PutRequest
	32, // 29: commandpb.RequestWithToken.delete_range_request:type_name -> etcdserverpb.DeleteRangeRequest
	33, // 30: commandpb.RequestWithToken.txn_request:type_name -> etcdserverpb.TxnRequest
	34, // 31: commandpb.RequestWithToken.compaction_request:type_name -> etcdserverpb.CompactionRequest
	35, // 32: commandpb.RequestWithToken.auth_enable_request:type_name -> etcdserverpb.AuthEnableRequest
	36, // 33: commandpb.RequestWithToken.auth_disable_request:type_name -> etcdserverpb.AuthDisableRequest
	37, // 34: commandpb.RequestWithToken.auth_status_request:type_name -> etcdserverpb.AuthStatusRequest
	38, // 35: commandpb.RequestWithToken.auth_role_add_request:type_name -> etcdserverpb.AuthRoleAddRequest
	39, // 36: commandpb.RequestWithToken.auth_role_delete_request:type_name -> etcdserverpb.AuthRoleDeleteRequest
	40, // 37: commandpb.RequestWithToken.auth_role_get_request:type_name -> etcdserverpb.AuthRoleGetRequest
	41, // 38: commandpb.RequestWithToken.auth_role_grant_permission_request:type_name -> etcdserverpb.AuthRoleGrantPermissionRequest
	42, // 39: commandpb.RequestWithToken.auth_role_list_request:type_name -> etcdserverpb.AuthRoleListRequest
	43, // 40: commandpb.RequestWithToken.auth_role_revoke_permission_request:type_name -> etcdserverpb.AuthRoleRevokePermissionRequest
	44, // 41: commandpb.RequestWithToken.auth_user_add_request:type_name -> etcdserverpb.AuthUserAddRequest
	45, // 42: commandpb.RequestWithToken.auth_user_change_password_request:type_name -> etcdserverpb.AuthUserChangePasswordRequest
	46, // 43: commandpb.RequestWithToken.auth_user_delete_request:type_name -> etcdserverpb.AuthUserDeleteRequest
	47, // 44: commandpb.RequestWithToken.auth_user_get_request:type_name -> etcdserverpb.AuthUserGetRequest
	48, // 45: commandpb.RequestWithToken.auth_user_grant_role_request:type_name -> etcdserverpb.AuthUserGrantRoleRequest
	49, // 46: commandpb.RequestWithToken.auth_user_list_request:type_name -> etcdserverpb.AuthUserListRequest
	50, // 47: commandpb.RequestWithToken.auth_user_revoke_role_request:type_name -> etcdserverpb.AuthUserRevokeRoleRequest
	51, // 48: commandpb.RequestWithToken.authenticate_request:type_name -> etcdserverpb.AuthenticateRequest
	52, // 49: commandpb.RequestWithToken.lease_grant_request:type_name -> etcdserverpb.LeaseGrantRequest
	53, // 50: commandpb.RequestWithToken.lease_revoke_request:type_name -> etcdserverpb.LeaseRevokeRequest
	54, // 51: commandpb.RequestWithToken.lease_leases_request:type_name -> etcdserverpb.LeaseLeasesRequest
	52, // [52:52] is the sub-list for method output_type
	52, // [52:52] is the sub-list for method input_type
	52, // [52:52] is the sub-list for extension type_name
	52, // [52:52] is the sub-list for extension extendee
	0,  // [0:52] is the sub-list for field type_name
}

func init() { file_xline_command_proto_init() }
func file_xline_command_proto_init() {
	if File_xline_command_proto != nil {
		return
	}
	file_rpc_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_xline_command_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xline_command_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xline_command_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xline_command_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xline_command_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestWithToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_xline_command_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*CommandResponse_RangeResponse)(nil),
		(*CommandResponse_PutResponse)(nil),
		(*CommandResponse_DeleteRangeResponse)(nil),
		(*CommandResponse_TxnResponse)(nil),
		(*CommandResponse_CompactionResponse)(nil),
		(*CommandResponse_AuthEnableResponse)(nil),
		(*CommandResponse_AuthDisableResponse)(nil),
		(*CommandResponse_AuthStatusResponse)(nil),
		(*CommandResponse_AuthRoleAddResponse)(nil),
		(*CommandResponse_AuthRoleDeleteResponse)(nil),
		(*CommandResponse_AuthRoleGetResponse)(nil),
		(*CommandResponse_AuthRoleGrantPermissionResponse)(nil),
		(*CommandResponse_AuthRoleListResponse)(nil),
		(*CommandResponse_AuthRoleRevokePermissionResponse)(nil),
		(*CommandResponse_AuthUserAddResponse)(nil),
		(*CommandResponse_AuthUserChangePasswordResponse)(nil),
		(*CommandResponse_AuthUserDeleteResponse)(nil),
		(*CommandResponse_AuthUserGetResponse)(nil),
		(*CommandResponse_AuthUserGrantRoleResponse)(nil),
		(*CommandResponse_AuthUserListResponse)(nil),
		(*CommandResponse_AuthUserRevokeRoleResponse)(nil),
		(*CommandResponse_AuthenticateResponse)(nil),
		(*CommandResponse_LeaseGrantResponse)(nil),
		(*CommandResponse_LeaseRevokeResponse)(nil),
		(*CommandResponse_LeaseLeasesResponse)(nil),
	}
	file_xline_command_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*RequestWithToken_RangeRequest)(nil),
		(*RequestWithToken_PutRequest)(nil),
		(*RequestWithToken_DeleteRangeRequest)(nil),
		(*RequestWithToken_TxnRequest)(nil),
		(*RequestWithToken_CompactionRequest)(nil),
		(*RequestWithToken_AuthEnableRequest)(nil),
		(*RequestWithToken_AuthDisableRequest)(nil),
		(*RequestWithToken_AuthStatusRequest)(nil),
		(*RequestWithToken_AuthRoleAddRequest)(nil),
		(*RequestWithToken_AuthRoleDeleteRequest)(nil),
		(*RequestWithToken_AuthRoleGetRequest)(nil),
		(*RequestWithToken_AuthRoleGrantPermissionRequest)(nil),
		(*RequestWithToken_AuthRoleListRequest)(nil),
		(*RequestWithToken_AuthRoleRevokePermissionRequest)(nil),
		(*RequestWithToken_AuthUserAddRequest)(nil),
		(*RequestWithToken_AuthUserChangePasswordRequest)(nil),
		(*RequestWithToken_AuthUserDeleteRequest)(nil),
		(*RequestWithToken_AuthUserGetRequest)(nil),
		(*RequestWithToken_AuthUserGrantRoleRequest)(nil),
		(*RequestWithToken_AuthUserListRequest)(nil),
		(*RequestWithToken_AuthUserRevokeRoleRequest)(nil),
		(*RequestWithToken_AuthenticateRequest)(nil),
		(*RequestWithToken_LeaseGrantRequest)(nil),
		(*RequestWithToken_LeaseRevokeRequest)(nil),
		(*RequestWithToken_LeaseLeasesRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xline_command_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_xline_command_proto_goTypes,
		DependencyIndexes: file_xline_command_proto_depIdxs,
		MessageInfos:      file_xline_command_proto_msgTypes,
	}.Build()
	File_xline_command_proto = out.File
	file_xline_command_proto_rawDesc = nil
	file_xline_command_proto_goTypes = nil
	file_xline_command_proto_depIdxs = nil
}
